name: Deploy to Google Cloud

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (e.g., dev, qa)'
        required: true
        default: 'dev'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      GCP_DEV_KEY_VAR: ${{ secrets.GCP_DEV_KEY }}  # Set the environment variable for the service account key
      PROJECT_DEV: ${{ secrets.PROJECT_DEV }}  # Set the environment variable for the project ID

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.GCP_DEV_KEY_VAR }}  # Use the service account key from the environment variable

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_DEV }}  # Use the project ID from the environment variable

      - name: Install dependencies for my-react-app-portal
        run: |
          cd ./my-react-app-portal
          npm install

      - name: Install dependencies for my-node-app-service
        run: |
          cd ./my-node-app-service
          npm install

      - name: Update version with timestamp for my-react-app-portal
        id: versioning-react-portal
        run: |
          cd my-react-app-portal
          VERSION=$(node -p "require('./package.json').version")
          TIMESTAMP=$(date -u +%Y%m%dT%H%M%S)
          NEW_VERSION="${VERSION%%+*}+$TIMESTAMP"
          node -e "let p=require('./package.json'); p.version='$NEW_VERSION'; require('fs').writeFileSync('package.json', JSON.stringify(p, null, 2))"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update version with timestamp for my-node-app-service
        id: versioning-node-service
        run: |
          cd my-node-app-service
          VERSION=$(node -p "require('./package.json').version")
          TIMESTAMP=$(date -u +%Y%m%dT%H%M%S)
          NEW_VERSION="${VERSION%%+*}+$TIMESTAMP"
          node -e "let p=require('./package.json'); p.version='$NEW_VERSION'; require('fs').writeFileSync('package.json', JSON.stringify(p, null, 2))"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Deploy Application
        run: |
          chmod +x ./Installer/dev/appdeployerdev.sh
          ./Installer/dev/appdeployerdev.sh -v ${{ steps.versioning-react-portal.outputs.new_version }} -s "all"

      - name: Deploy to App Engine
        uses: google-github-actions/deploy-appengine@v2
        with:
          project_id: ${{ env.PROJECT_DEV }}  # Pass the project ID from the environment variable
          deliverables: app.yaml
